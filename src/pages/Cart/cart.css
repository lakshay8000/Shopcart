.cart-title {
    padding: 3rem 0;
}

.order-details {
    flex-basis: 70%;
    box-shadow: 0px 1px 5px var(--light-grey);
    padding: 1.25rem;
    margin-bottom: 2rem;
}

.order-details-title {
    font-size: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--light-grey);
}


.price-details {
    flex-basis: 30%;
    margin-left: 2rem;
    position: sticky;  /* the element will get sticked to a fixed place or we can say the position will become fixed when the offset (here the offset is top: 4.5rem) is reached while scrolling */
    top: 4.5rem;
    align-self: flex-start; /* very imp-> when we give position : sticky to a flexbox element, we have to use align-self property to make it work. align-self overwrites the align-items property of flex, that's why position: sticky will start working if it was not working because of the flexbox */
}

.price-details-box {
    box-shadow: 0px 1px 5px var(--light-grey);
    padding: 1.25rem;
    margin-bottom: 2rem;
    
}

.continue-shopping-btn {
    color: white;
}

.cart-wrapper {
    display: flex;
    margin-bottom: 4rem;
}

@media (max-width : 768px) {
    .cart-wrapper {
        flex-direction: column;
    }
}